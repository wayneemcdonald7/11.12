import tkinter as tk
from tkinter import messagebox

class SkinCareApp:
    def __init__(self, master):
        self.master = master
        self.master.title("Skin Care App")

        self.skin_types = ["Normal", "Oily", "Dry", "Combination", "Sensitive"]

        self.skin_type_var = tk.StringVar()
        self.skin_type_var.set(self.skin_types[0])

        self.username_var = tk.StringVar()

        # User profiles (dictionary to store profiles)
        self.user_profiles = {}

        # Create GUI elements
        tk.Label(master, text="Enter your username:").pack(pady=10)
        tk.Entry(master, textvariable=self.username_var).pack(pady=10)

        tk.Label(master, text="Select your skin type:").pack(pady=10)
        tk.OptionMenu(master, self.skin_type_var, *self.skin_types).pack(pady=10)

        tk.Button(master, text="Get Daily Tips", command=self.show_skin_care_tips).pack(pady=10)
        tk.Button(master, text="Set Reminder", command=self.set_reminder).pack(pady=10)
        tk.Button(master, text="Save Profile", command=self.save_profile).pack(pady=10)
        tk.Button(master, text="Load Profile", command=self.load_profile).pack(pady=10)

    def show_skin_care_tips(self):
        username = self.username_var.get()
        selected_skin_type = self.skin_type_var.get()

        if not username:
            messagebox.showwarning("Warning", "Please enter your username.")
            return

        morning_tips = self.get_morning_tips(selected_skin_type)
        evening_tips = self.get_evening_tips(selected_skin_type)
        product_recommendations = self.get_product_recommendations(selected_skin_type)

        tips_message = f"Good morning, {username}!\n\nMorning Tips for {selected_skin_type} Skin:\n{morning_tips}\n\n"
        tips_message += f"Evening Tips for {selected_skin_type} Skin:\n{evening_tips}\n\n"
        tips_message += f"Product Recommendations:\n{product_recommendations}\n\n"
        tips_message += "Don't forget to apply sunscreen during the day to protect your skin from harmful UV rays."

        messagebox.showinfo(f"Skin Care Tips for {selected_skin_type} Skin", tips_message)

    def get_morning_tips(self, skin_type):
        # ... (unchanged)

    def get_evening_tips(self, skin_type):
        # ... (unchanged)

    def get_product_recommendations(self, skin_type):
        # ... (unchanged)

    def set_reminder(self):
        username = self.username_var.get()
        if not username:
            messagebox.showwarning("Warning", "Please enter your username before setting a reminder.")
            return

        reminder_message = f"Hi, {username}! Don't forget to take care of your skin today. Follow your skincare routine."

        messagebox.showinfo("Set Reminder", f"Reminder set for {username}:\n{reminder_message}")

    def save_profile(self):
        username = self.username_var.get()
        skin_type = self.skin_type_var.get()

        if username and skin_type:
            self.user_profiles[username] = {"SkinType": skin_type}
            messagebox.showinfo("Save Profile", f"Profile for {username} saved successfully.")
        else:
            messagebox.showwarning("Warning", "Please enter both username and skin type before saving.")

    def load_profile(self):
        username = self.username_var.get()

        if username in self.user_profiles:
            skin_type = self.user_profiles[username]["SkinType"]
            self.skin_type_var.set(skin_type)
            messagebox.showinfo("Load Profile", f"Profile for {username} loaded successfully.")
        else:
            messagebox.showwarning("Warning", f"Profile for {username} not found.")

def main():
    root = tk.Tk()
    app = SkinCareApp(root)
    root.mainloop()

if __name__ == "__main__":
    main()
